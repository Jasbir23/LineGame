{"version":3,"sources":["assets/bubblePop.wav","assets/laserBlast.ogg","assets/wallTap.wav","assets/win.mp3","brickLevels.js","bricks.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","makeLevels","height","width","brickEdge","index","poppableNumber","balls","popped","type","id","style","top","left","borderRadius","window","innerHeight","innerWidth","startHeight","startWidth","touchHeight","touchWidth","startTop","lineMax","lineLength","strokeWidth","levelNo","characterLottieSegments","allLevels","bubbleAudio","require","laserAudio","wallTapAudio","winAudio","Bricks","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseMove","mouseEvent","state","isDrawing","point","relativeCoordinatesForEvent","detectCollision","genericCollision","handleMouseUp","lines","listNumber","size","pointNumber","get","prevPoint","getIn","slope","dist","Math","sqrt","pow","xDir","yDir","relSeg","flag","factor","push","newSeg","Immutable","List","setState","prevState","updateIn","line","relArray","concat","lineColor","confettiLeft","confettiTop","isAlive","gameWon","winModal","lineReversed","startModal","start","arr","gameLoop","bind","assertThisInitialized","allCharRefs","allCharLotties","poppedCount","_this2","document","querySelector","initConfettiLottie","getElementById","all","initAllCharLotties","resetLevel","refs","drawArea","addEventListener","event","handleMouseDown","_this3","map","item","lottie","loadAnimation","container","animType","prerender","autoplay","loop","animationData","setSpeed","randomFrame","floor","random","playSegments","goToAndPlay","confettiLottie","confettiRef","_this4","length","_this5","count","charLottie","charIndex","animClass","setTimeout","play","_this6","keys","destroy","vs","x","y","inside","i","j","xi","yi","xj","yj","boundingRect","getBoundingClientRect","Map","touches","clientX","clientY","_this7","touchPoint","touchedBubbles","cancelAnimationFrame","gameLoopRef","isAnimating","_this8","startTimer","relPointer","refPoint","relObj","requestAnimationFrame","_this9","isNaN","newX","newY","catch","Infinity","sin","atan","cos","collisionDetection","goToAndStop","splice","shift","_this10","performWin","_this11","react_default","a","createElement","name","content","className","ref","bgRef","key","DrawingLine","stroke","onClick","changeLevel","src","React","Component","_ref4","pathData","join","d","App","bricks_Bricks","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","render","src_App_0","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2d5cbdb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bubblePop.af2cd45b.wav\";","module.exports = __webpack_public_path__ + \"static/media/laserBlast.fdef3ce4.ogg\";","module.exports = __webpack_public_path__ + \"static/media/wallTap.0b51ebd5.wav\";","module.exports = __webpack_public_path__ + \"static/media/win.4f2db584.mp3\";","export default function makeLevels(height, width, brickEdge) {\n  return [\n    {\n      index: 0,\n      poppableNumber: 2,\n      balls: [\n        {\n          popped: false,\n          type: \"pop\",\n          id: \"a\",\n          style: {\n            top: height / 2 - brickEdge / 2 - brickEdge - brickEdge / 2,\n            left: width / 2 - brickEdge / 2,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: brickEdge / 2\n          }\n        },\n        {\n          popped: false,\n          type: \"black\",\n          id: \"b\",\n          style: {\n            top: height / 2 - brickEdge / 2,\n            left: width / 2 - brickEdge / 2,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: brickEdge / 2\n          }\n        },\n        {\n          popped: false,\n          type: \"pop\",\n          id: \"c\",\n          style: {\n            top: height / 2 + brickEdge / 2 + brickEdge / 2,\n            left: width / 2 - brickEdge / 2,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: brickEdge / 2\n          }\n        }\n      ]\n    },\n    {\n      index: 1,\n      poppableNumber: 2,\n      balls: [\n        {\n          popped: false,\n          type: \"pop\",\n          id: \"a\",\n          style: {\n            top: 100,\n            left: width / 2 - 80,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: 20\n          }\n        },\n        {\n          popped: false,\n          type: \"black\",\n          id: \"b\",\n          style: {\n            top: 100,\n            left: width / 2 - 20,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: 20\n          }\n        },\n        {\n          popped: false,\n          type: \"pop\",\n          id: \"c\",\n          style: {\n            top: 100,\n            left: width / 2 + 40,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: 20\n          }\n        }\n      ]\n    },\n    {\n      index: 2,\n      poppableNumber: 3,\n      balls: [\n        {\n          popped: false,\n          type: \"pop\",\n          id: \"a\",\n          style: {\n            top: 100,\n            left: width / 2 - 80,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: 20\n          }\n        },\n        {\n          popped: false,\n          type: \"black\",\n          id: \"b\",\n          style: {\n            top: 100,\n            left: width / 2 - 20,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: 20\n          }\n        },\n        {\n          popped: false,\n          type: \"pop\",\n          id: \"c\",\n          style: {\n            top: 40,\n            left: width / 2 - 20,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: 20\n          }\n        },\n        {\n          popped: false,\n          type: \"pop\",\n          style: {\n            top: 100,\n            left: width / 2 + 40,\n            height: brickEdge,\n            width: brickEdge,\n            borderRadius: 20\n          }\n        }\n      ]\n    }\n  ];\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Immutable from \"immutable\";\nimport lottie from \"lottie-web\";\nimport all from \"./brickLevels\";\nvar height = window.innerHeight,\n  width = window.innerWidth;\nvar startHeight = 40,\n  startWidth = 100,\n  touchHeight = width / 4,\n  touchWidth = width / 4,\n  startTop = height - 100,\n  lineMax = height * 1.5,\n  lineLength = 0,\n  brickEdge = width / 7,\n  strokeWidth = width / 55,\n  levelNo = 0,\n  characterLottieSegments = [[0, 87], [88, 116], [117, 171]];\nvar allLevels = [];\nconst bubbleAudio = require(`./assets/bubblePop.wav`);\nconst laserAudio = require(`./assets/laserBlast.ogg`);\nconst wallTapAudio = require(`./assets/wallTap.wav`);\nconst winAudio = require(`./assets/win.mp3`);\n\nexport default class Bricks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: new Immutable.List(),\n      relArray: new Immutable.List(),\n      isDrawing: false,\n      lineColor: \"white\",\n      confettiLeft: 0,\n      confettiTop: 0,\n      isAlive: false,\n      gameWon: false,\n      winModal: false,\n      lineReversed: false,\n      startModal: true,\n      poppableNumber: 0,\n      start: [\n        [width / 2 - startWidth, startTop],\n        [width / 2 + startWidth, startTop],\n        [width / 2 + startWidth, startTop + startHeight],\n        [width / 2 - startWidth, startTop + startHeight]\n      ],\n      arr: []\n    };\n    this.gameLoop = this.gameLoop.bind(this);\n    this.allCharRefs = [];\n    this.allCharLotties = [];\n    this.poppedCount = {};\n  }\n  componentDidMount() {\n    document.querySelector(\".drawArea\").style.height = height + \"px\";\n    document.querySelector(\".drawArea\").style.width = width + \"px\";\n    this.initConfettiLottie();\n    this.bubbleAudio = document.getElementById(\"bubble\");\n    this.laserAudio = document.getElementById(\"laserAudio\");\n    this.wallTapAudio = document.getElementById(\"wallTap\");\n    this.winAudio = document.getElementById(\"winAudio\");\n    // this.initBgLottie();\n    allLevels = all(height, width, brickEdge);\n    this.setState(\n      {\n        arr: allLevels[levelNo].balls\n      },\n      () => {\n        this.initAllCharLotties();\n        this.resetLevel();\n      }\n    );\n    this.refs.drawArea.addEventListener(\n      \"touchmove\",\n      event => this.handleMouseMove(event),\n      false\n    );\n    this.refs.drawArea.addEventListener(\n      \"touchend\",\n      event => this.handleMouseUp(event),\n      false\n    );\n    this.refs.drawArea.addEventListener(\n      \"touchstart\",\n      event => this.handleMouseDown(event),\n      false\n    );\n  }\n  // initBgLottie() {\n  //   this.bgLottie = lottie.loadAnimation({\n  //     container: this.bgRef,\n  //     animType: \"svg\",\n  //     prerender: true,\n  //     autoplay: true,\n  //     loop: true,\n  //     animationData: require(`./assets/cloudBg.json`) // the path to the animation json\n  //   });\n  //   this.bgLottie.setSpeed(0.1);\n  // }\n  initAllCharLotties() {\n    this.state.arr.map((item, index) => {\n      if (this.state.arr[index].type !== \"pop\") return;\n      this.allCharLotties[index] = lottie.loadAnimation({\n        container: this.allCharRefs[index],\n        animType: \"svg\",\n        prerender: true,\n        autoplay: false,\n        loop: true,\n        animationData: require(`./assets/character.json`) // the path to the animation json\n      });\n      this.allCharLotties[index].setSpeed(0.7);\n      const randomFrame = Math.floor(\n        Math.random() * characterLottieSegments[0][1]\n      );\n      this.allCharLotties[index].playSegments(characterLottieSegments[0], true);\n      this.allCharLotties[index].goToAndPlay(randomFrame, true);\n    });\n  }\n  initConfettiLottie() {\n    this.confettiLottie = lottie.loadAnimation({\n      container: this.confettiRef,\n      animType: \"svg\",\n      prerender: true,\n      autoplay: false,\n      loop: false,\n      animationData: require(`./assets/confetti3.json`) // the path to the animation json\n    });\n  }\n  changeLevel() {\n    levelNo++;\n    if (levelNo > allLevels.length - 1) levelNo = 0;\n    this.setState(\n      {\n        gameWon: false\n      },\n      () => this.resetLevel()\n    );\n  }\n  performWin() {\n    // let poppedCount = 0;\n    // this.state.arr.map(brick => {\n    //   if (brick.popped) poppedCount++;\n    // });\n    // if (poppedCount === this.state.poppableNumber && !this.state.gameWon) {\n    let count = 0;\n    this.allCharLotties.map((charLottie, charIndex) => {\n      count++;\n      charLottie.playSegments(characterLottieSegments[2], true);\n      charLottie.setSpeed(0.3);\n      charLottie.loop = false;\n      this.state.arr[charIndex].animClass =\n        count % 2 === 0 ? \"fallDown1\" : \"fallDown2\";\n    });\n    this.setState({\n      gameWon: true\n    });\n    setTimeout(() => {\n      this.winAudio.play();\n      this.setState({ winModal: true });\n    }, 2500);\n  }\n  resetLevel() {\n    if (this.state.gameWon) return;\n    allLevels = all(height, width, brickEdge);\n    this.allCharRefs = [];\n    this.setState(\n      {\n        arr: allLevels[levelNo].balls,\n        poppableNumber: allLevels[levelNo].poppableNumber\n      },\n      () => {\n        if (Object.keys(this.poppedCount).length !== 0) {\n          this.poppedCount = {};\n          this.allCharLotties.map(item => item.destroy());\n          this.initAllCharLotties();\n        }\n      }\n    );\n  }\n  inside(point, vs) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    var x = point[0],\n      y = point[1];\n\n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n        yi = vs[i][1];\n      var xj = vs[j][0],\n        yj = vs[j][1];\n\n      var intersect =\n        yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n  relativeCoordinatesForEvent(mouseEvent) {\n    const boundingRect = this.refs.drawArea.getBoundingClientRect();\n    return new Immutable.Map({\n      x: mouseEvent.touches[0].clientX - boundingRect.left,\n      y: mouseEvent.touches[0].clientY - boundingRect.top\n    });\n  }\n  handleMouseDown(mouseEvent) {\n    if (this.state.gameWon) return;\n    var touchPoint = [\n      mouseEvent.touches[0].clientX,\n      mouseEvent.touches[0].clientY\n    ];\n    // if (!this.inside(touchPoint, this.state.start)) return;\n    let touchedBubbles = false;\n    this.state.arr.map(item => {\n      if (\n        this.inside(touchPoint, [\n          [item.style.left, item.style.top],\n          [item.style.left + brickEdge, item.style.top],\n          [item.style.left + brickEdge, item.style.top + brickEdge],\n          [item.style.left, item.style.top + brickEdge]\n        ])\n      ) {\n        touchedBubbles = true;\n      }\n    });\n    if (touchedBubbles) return;\n    this.resetLevel();\n    // this.startLottie.pause();\n    window.cancelAnimationFrame(this.gameLoopRef);\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n    this.setState(\n      {\n        lines: new Immutable.List(),\n        lineReversed: false\n      },\n      () => {\n        this.setState(prevState => ({\n          lines: prevState.lines.push(new Immutable.List([point])),\n          isDrawing: true,\n          isAnimating: false,\n          relArray: new Immutable.List()\n        }));\n      }\n    );\n  }\n  handleMouseMove = mouseEvent => {\n    if (!this.state.isDrawing) {\n      return;\n    }\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n    if (lineLength > lineMax || this.detectCollision(point).genericCollision)\n      this.handleMouseUp();\n    // var touchPoint = [\n    //   mouseEvent.touches[0].clientX,\n    //   mouseEvent.touches[0].clientY\n    // ];\n    if (this.state.lines) {\n      const listNumber = this.state.lines.size - 1;\n      const pointNumber =\n        (this.state.lines.get(this.state.lines.size - 1) &&\n          this.state.lines.get(this.state.lines.size - 1).size - 1) ||\n        0;\n      const prevPoint = this.state.lines.getIn([listNumber, pointNumber]);\n      if (prevPoint) {\n        const slope =\n          (prevPoint.get(\"y\") - point.get(\"y\")) /\n          (prevPoint.get(\"x\") - point.get(\"x\"));\n        const dist = Math.sqrt(\n          Math.pow(prevPoint.get(\"y\") - point.get(\"y\"), 2) +\n            Math.pow(prevPoint.get(\"x\") - point.get(\"x\"), 2)\n        );\n        if (dist < 3) return;\n        const xDir = point.get(\"y\") < prevPoint.get(\"y\");\n        const yDir = point.get(\"x\") < prevPoint.get(\"x\");\n        let relSeg = [];\n        if (dist > 20) {\n          let flag = 0;\n          let factor = dist / 3;\n          while (flag < dist) {\n            flag = flag + factor;\n            relSeg.push({ slope: slope, dist: factor, xDir: xDir, yDir: yDir });\n          }\n        } else {\n          relSeg.push({ slope: slope, dist: dist, xDir: xDir, yDir: yDir });\n        }\n        const newSeg = new Immutable.List(relSeg);\n        lineLength = lineLength + dist;\n        this.setState(prevState => ({\n          lines: prevState.lines.updateIn([prevState.lines.size - 1], line =>\n            line.push(point)\n          ),\n          relArray: prevState.relArray.concat(newSeg)\n        }));\n      }\n    } else\n      this.setState(prevState => ({\n        lines: prevState.lines.updateIn([prevState.lines.size - 1], line =>\n          line.push(point)\n        )\n      }));\n  };\n  handleMouseUp() {\n    if (!this.state.isDrawing) return;\n    // this.startLottie.play();\n    lineLength = 0;\n    // var size =\n    //   this.state.lines.get(this.state.lines.size - 1) &&\n    //   this.state.lines.get(this.state.lines.size - 1).size;\n    // if (size > 8)\n    this.setState({ isDrawing: false, isAlive: true }, () => this.startTimer());\n    // else\n    // this.setState({\n    //   lines: new Immutable.List(),\n    //   relArray: new Immutable.List(),\n    //   isDrawing: false,\n    //   isAlive: false\n    // });\n  }\n  startTimer() {\n    this.relPointer = 0;\n    this.refPoint = this.state.lines\n      .get(this.state.lines.size - 1)\n      .get(this.state.lines.get(this.state.lines.size - 1).size - 1);\n    this.relObj = this.state.relArray.get(this.relPointer);\n    this.gameLoopRef = window.requestAnimationFrame(this.gameLoop);\n  }\n  gameLoop() {\n    if (!this.state.isAlive) {\n      window.cancelAnimationFrame(this.gameLoopRef);\n      this.setState({\n        lines: new Immutable.List(),\n        relArray: new Immutable.List(),\n        isDrawing: false,\n        isAlive: false\n      });\n      return;\n    }\n    this.relObj = this.state.relArray.get(this.relPointer);\n    this.relPointer++;\n    if (this.relPointer > this.state.relArray.size - 1) this.relPointer = 0;\n    if (!this.relObj)\n      return (this.gameLoopRef = window.requestAnimationFrame(this.gameLoop));\n    if (isNaN(this.relObj.slope))\n      return (this.gameLoopRef = window.requestAnimationFrame(this.gameLoop));\n    let newX = this.refPoint.get(\"x\");\n    let newY = this.refPoint.get(\"y\");\n    if (newX > width - width / 50) {\n      this.state.lineReversed = !this.state.lineReversed;\n      newX -= width / 50;\n      this.wallTapAudio.play().catch();\n    }\n    if (newX < width / 50) {\n      newX += width / 50;\n      this.state.lineReversed = !this.state.lineReversed;\n      this.wallTapAudio.play().catch();\n    }\n    if (this.relObj.slope === Infinity) newY -= this.relObj.dist;\n    else if (this.relObj.slope === -Infinity) newY += this.relObj.dist;\n    else if (\n      (this.relObj.xDir && !this.relObj.yDir) ||\n      (!this.relObj.xDir && !this.relObj.yDir)\n    ) {\n      newY += this.relObj.dist * Math.sin(Math.atan(this.relObj.slope));\n      this.state.lineReversed\n        ? (newX -= this.relObj.dist * Math.cos(Math.atan(this.relObj.slope)))\n        : (newX += this.relObj.dist * Math.cos(Math.atan(this.relObj.slope)));\n    } else if (\n      (!this.relObj.xDir && this.relObj.yDir) ||\n      (this.relObj.xDir && this.relObj.yDir)\n    ) {\n      newY -= this.relObj.dist * Math.sin(Math.atan(this.relObj.slope));\n      this.state.lineReversed\n        ? (newX += this.relObj.dist * Math.cos(Math.atan(this.relObj.slope)))\n        : (newX -= this.relObj.dist * Math.cos(Math.atan(this.relObj.slope)));\n    }\n    var isAlive = newY > 0 && newY < height;\n    var collisionDetection = this.detectCollision(this.refPoint).isAlive;\n    isAlive = collisionDetection ? isAlive : false;\n    this.refPoint = new Immutable.Map({ x: newX, y: newY });\n    if (!isAlive) {\n      !this.state.gameWon && this.laserAudio.play().catch();\n      this.setState(\n        {\n          confettiLeft: newX - touchWidth / 2,\n          confettiTop: newY - touchHeight / 2\n        },\n        () => {\n          this.confettiLottie.goToAndStop(0);\n          this.confettiLottie.play();\n        }\n      );\n      this.resetLevel();\n    }\n    this.setState(prevState => ({\n      lines: prevState.lines.updateIn(\n        [prevState.lines.size - 1],\n        line => line && line.push(this.refPoint)\n      ),\n      isAlive: isAlive\n    }));\n    this.setState(prevState => ({\n      lines: prevState.lines.updateIn([prevState.lines.size - 1], line => {\n        if (line) {\n          if (line.size > 25) {\n            return line.splice(0, 2) || (line.splice(0, line.size) && line);\n          } else return line.shift();\n        }\n      })\n    }));\n    this.gameLoopRef = window.requestAnimationFrame(this.gameLoop);\n  }\n  detectCollision(refPoint) {\n    let isAlive = true;\n    let genericCollision = false;\n    if (this.state.gameWon) return { isAlive: false, genericCollision };\n    this.state.arr.map((item, index) => {\n      if (\n        refPoint.get(\"x\") > item.style.left &&\n        refPoint.get(\"x\") < item.style.left + brickEdge &&\n        refPoint.get(\"y\") > item.style.top &&\n        refPoint.get(\"y\") < item.style.top + brickEdge\n      ) {\n        genericCollision = true;\n        if (item.type === \"pop\") {\n          this.poppedCount[`${item.id}`] = item.id;\n          // item.animClass = \"fallDown1\";\n          if (!item.popped) {\n            this.bubbleAudio.play().catch();\n            this.allCharLotties[index].playSegments(\n              characterLottieSegments[1],\n              true\n            );\n            this.allCharLotties[index].setSpeed(0.5);\n          }\n          item.popped = true;\n          this.allCharLotties[index].loop = false;\n        } else {\n          isAlive = false;\n        }\n      }\n    });\n    if (Object.keys(this.poppedCount).length === this.state.poppableNumber) {\n      this.performWin();\n    }\n    // genericCollision &&\n    //   this.setState({\n    //     arr: this.state.arr\n    //   });\n    return { isAlive, genericCollision };\n  }\n  render() {\n    return (\n      <div>\n        <meta\n          name=\"viewport\"\n          content=\"initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n        />\n        <div id=\"jaz\" className=\"drawArea\" ref=\"drawArea\">\n          <div className=\"bg\" ref={ref => (this.bgRef = ref)} />\n          <div\n            ref={ref => (this.confettiRef = ref)}\n            className=\"absoluteDiv\"\n            style={{\n              height: touchHeight,\n              width: touchWidth,\n              top: this.state.confettiTop,\n              left: this.state.confettiLeft\n            }}\n          />\n          {this.state.arr.map((item, index) => {\n            return (\n              <div\n                className={\n                  item.type === \"pop\" ? item.animClass || \"brick\" : \"planet\"\n                }\n                ref={ref => (this.allCharRefs[index] = ref)}\n                style={item.style}\n                key={index}\n              />\n            );\n          })}\n          <svg className=\"drawing\">\n            {this.state.lines.map((line, index) => (\n              <DrawingLine\n                key={index}\n                line={line}\n                stroke={this.state.lineColor}\n                strokeWidth={strokeWidth + 8}\n                className=\"path\"\n              />\n            ))}\n            {this.state.lines.map((line, index) => (\n              <DrawingLine\n                key={index}\n                line={line}\n                stroke={this.state.lineColor}\n                strokeWidth={strokeWidth}\n                className=\"path2\"\n              />\n            ))}\n          </svg>\n          <div className=\"leftWall wall\"></div>\n          <div className=\"rightWall wall\"></div>\n          <div\n            className=\"startModal\"\n            style={{ top: this.state.startModal ? 0 : \"100%\" }}\n          >\n            <span\n              className=\"startButton\"\n              onClick={() => this.setState({ startModal: false })}\n            >\n              START\n            </span>\n          </div>\n          <div\n            className=\"winModal\"\n            style={{ top: this.state.winModal ? 0 : \"100%\" }}\n          >\n            <span className=\"winText\">Woooohooo!!</span>\n            <span className=\"winText\">Level Completed</span>\n            <span\n              onClick={() => {\n                this.setState({\n                  gameWon: false,\n                  winModal: false\n                });\n                this.changeLevel();\n              }}\n              className=\"nextButton\"\n            >\n              Next Level\n            </span>\n          </div>\n          <div className=\"landscapeModal\"></div>\n        </div>\n        <audio id={\"bubble\"}>\n          <source src={bubbleAudio} />\n        </audio>\n        <audio id={\"laserAudio\"}>\n          <source src={laserAudio} />\n        </audio>\n        <audio id={\"wallTap\"}>\n          <source src={wallTapAudio} />\n        </audio>\n        <audio id={\"winAudio\"}>\n          <source src={winAudio} />\n        </audio>\n      </div>\n    );\n  }\n}\nfunction DrawingLine({ line, stroke, strokeWidth, className }) {\n  if (line.size <= 0) return null;\n  const pathData =\n    \"M \" +\n    line\n      .map(p => {\n        return `${p.get(\"x\")} ${p.get(\"y\")}`;\n      })\n      .join(\" L \");\n  return (\n    <path\n      className={className}\n      d={pathData}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n    />\n  );\n}\n","import React, { Component } from \"react\";\n// import Draw from \"./Draw\";\n// import Pipers from \"./pipers\";\nimport Bricks from \"./bricks\";\n\nclass App extends Component {\n  render() {\n    return <Bricks />;\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}